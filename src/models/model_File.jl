# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""file

    File(;
        path=nothing,
        size=nothing,
        modified=nothing,
    )

    - path::String : Path of the file, relative to the root directory of the user&#39;s server-side workspace. MUST NOT start with a slash &#x60;/&#x60; and MUST NOT be url-encoded.  The Windows-style path name component separator &#x60;\\&#x60; is not supported, always use &#x60;/&#x60; instead.  Note: The pattern only specifies a minimal subset of invalid characters. The back-ends MAY enforce additional restrictions depending on their OS/environment.
    - size::Int64 : File size in bytes.
    - modified::ZonedDateTime : Date and time the file has lastly been modified, formatted as a [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339.html) date-time.
"""
Base.@kwdef mutable struct File <: OpenAPI.APIModel
    path::Union{Nothing, String} = nothing
    size::Union{Nothing, Int64} = nothing
    modified::Union{Nothing, ZonedDateTime} = nothing

    function File(path, size, modified, )
        OpenAPI.validate_property(File, Symbol("path"), path)
        OpenAPI.validate_property(File, Symbol("size"), size)
        OpenAPI.validate_property(File, Symbol("modified"), modified)
        return new(path, size, modified, )
    end
end # type File

const _property_types_File = Dict{Symbol,String}(Symbol("path")=>"String", Symbol("size")=>"Int64", Symbol("modified")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ File }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_File[name]))}

function check_required(o::File)
    o.path === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ File }, name::Symbol, val)
    if name === Symbol("path")
        OpenAPI.validate_param(name, "File", :pattern, val, r"^[^\/  \:'\"][^  \:'\"]*$")
    end
    if name === Symbol("modified")
        OpenAPI.validate_param(name, "File", :format, val, "date-time")
    end
end
