# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Object__restricted_

    ObjectRestricted(;
        from_parameter=nothing,
        from_node=nothing,
        process_graph=nothing,
    )

    - from_parameter::Any
    - from_node::Any
    - process_graph::Any
"""
Base.@kwdef mutable struct ObjectRestricted <: OpenAPI.APIModel
    from_parameter::Union{Nothing, Any} = nothing
    from_node::Union{Nothing, Any} = nothing
    process_graph::Union{Nothing, Any} = nothing

    function ObjectRestricted(from_parameter, from_node, process_graph, )
        OpenAPI.validate_property(ObjectRestricted, Symbol("from_parameter"), from_parameter)
        OpenAPI.validate_property(ObjectRestricted, Symbol("from_node"), from_node)
        OpenAPI.validate_property(ObjectRestricted, Symbol("process_graph"), process_graph)
        return new(from_parameter, from_node, process_graph, )
    end
end # type ObjectRestricted

const _property_types_ObjectRestricted = Dict{Symbol,String}(Symbol("from_parameter")=>"Any", Symbol("from_node")=>"Any", Symbol("process_graph")=>"Any", )
OpenAPI.property_type(::Type{ ObjectRestricted }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ObjectRestricted[name]))}

function check_required(o::ObjectRestricted)
    true
end

function OpenAPI.validate_property(::Type{ ObjectRestricted }, name::Symbol, val)
end
