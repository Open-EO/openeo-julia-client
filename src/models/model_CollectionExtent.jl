# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Collection_Extent
The extent of the data in the collection. Additional members MAY be added to represent other extents, for example, thermal or pressure ranges.  The first item in the array always describes the overall extent of the data. All subsequent items describe more preciseextents, e.g. to identify clusters of data. Clients only interested in the overall extent will only need to access the first item in each array.

    CollectionExtent(;
        spatial=nothing,
        temporal=nothing,
    )

    - spatial::CollectionSpatialExtent
    - temporal::CollectionTemporalExtent
"""
Base.@kwdef mutable struct CollectionExtent <: OpenAPI.APIModel
    spatial = nothing # spec type: Union{ Nothing, CollectionSpatialExtent }
    temporal = nothing # spec type: Union{ Nothing, CollectionTemporalExtent }

    function CollectionExtent(spatial, temporal, )
        OpenAPI.validate_property(CollectionExtent, Symbol("spatial"), spatial)
        OpenAPI.validate_property(CollectionExtent, Symbol("temporal"), temporal)
        return new(spatial, temporal, )
    end
end # type CollectionExtent

const _property_types_CollectionExtent = Dict{Symbol,String}(Symbol("spatial")=>"CollectionSpatialExtent", Symbol("temporal")=>"CollectionTemporalExtent", )
OpenAPI.property_type(::Type{ CollectionExtent }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CollectionExtent[name]))}

function check_required(o::CollectionExtent)
    o.spatial === nothing && (return false)
    o.temporal === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CollectionExtent }, name::Symbol, val)
end
