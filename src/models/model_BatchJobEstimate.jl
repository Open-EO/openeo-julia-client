# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Batch_Job_Estimate

    BatchJobEstimate(;
        costs=nothing,
        duration=nothing,
        size=nothing,
        downloads_included=nothing,
        expires=nothing,
    )

    - costs::Float64 : An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling &#x60;GET /&#x60;. If no currency is set, this field MUST be &#x60;null&#x60;.
    - duration::String : Estimated duration for the operation. Duration MUST be specified as a ISO 8601 duration.
    - size::Int64 : Estimated required storage capacity, i.e. the size of the generated files. Size MUST be specified in bytes.
    - downloads_included::Int64 : Specifies how many full downloads of the processed data are included in the estimate. Set to &#x60;null&#x60; for unlimited downloads, which is also the default value.
    - expires::ZonedDateTime : Time until which the estimate is valid, formatted as a [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339.html) date-time.
"""
Base.@kwdef mutable struct BatchJobEstimate <: OpenAPI.APIModel
    costs::Union{Nothing, Float64} = nothing
    duration::Union{Nothing, String} = nothing
    size::Union{Nothing, Int64} = nothing
    downloads_included::Union{Nothing, Int64} = nothing
    expires::Union{Nothing, ZonedDateTime} = nothing

    function BatchJobEstimate(costs, duration, size, downloads_included, expires, )
        OpenAPI.validate_property(BatchJobEstimate, Symbol("costs"), costs)
        OpenAPI.validate_property(BatchJobEstimate, Symbol("duration"), duration)
        OpenAPI.validate_property(BatchJobEstimate, Symbol("size"), size)
        OpenAPI.validate_property(BatchJobEstimate, Symbol("downloads_included"), downloads_included)
        OpenAPI.validate_property(BatchJobEstimate, Symbol("expires"), expires)
        return new(costs, duration, size, downloads_included, expires, )
    end
end # type BatchJobEstimate

const _property_types_BatchJobEstimate = Dict{Symbol,String}(Symbol("costs")=>"Float64", Symbol("duration")=>"String", Symbol("size")=>"Int64", Symbol("downloads_included")=>"Int64", Symbol("expires")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ BatchJobEstimate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BatchJobEstimate[name]))}

function check_required(o::BatchJobEstimate)
    true
end

function OpenAPI.validate_property(::Type{ BatchJobEstimate }, name::Symbol, val)
    if name === Symbol("costs")
        OpenAPI.validate_param(name, "BatchJobEstimate", :minimum, val, 0, false)
    end
    if name === Symbol("expires")
        OpenAPI.validate_param(name, "BatchJobEstimate", :format, val, "date-time")
    end
end
