# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct EODataDiscoveryApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `EODataDiscoveryApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ EODataDiscoveryApi }) = "https://openeo.example/api/v1"

const _returntypes_describe_collection_EODataDiscoveryApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DescribeCollection200Response,
    Regex("^" * replace("4XX", "x"=>".") * "\$") => Error,
    Regex("^" * replace("5XX", "x"=>".") * "\$") => Error,
)

function _oacinternal_describe_collection(_api::EODataDiscoveryApi, collection_id::String; _mediaType=nothing)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_describe_collection_EODataDiscoveryApi, "/collections/{collection_id}", ["Bearer", ])
    OpenAPI.Clients.set_param(_ctx.path, "collection_id", collection_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Full metadata for a specific dataset

Lists **all** information about a specific collection specified by the identifier `collection_id`.  This endpoint is compatible with [STAC API 0.9.0 and later](https://stacspec.org) and [OGC API - Features 1.0](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html). [STAC API extensions](https://stac-api-extensions.github.io) and [STAC extensions](https://stac-extensions.github.io) can be implemented in addition to what is documented here.  Note: Providing the Bearer token is REQUIRED for private collections.

Params:
- collection_id::String (required)

Return: DescribeCollection200Response, OpenAPI.Clients.ApiResponse
"""
function describe_collection(_api::EODataDiscoveryApi, collection_id::String; _mediaType=nothing)
    _ctx = _oacinternal_describe_collection(_api, collection_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function describe_collection(_api::EODataDiscoveryApi, response_stream::Channel, collection_id::String; _mediaType=nothing)
    _ctx = _oacinternal_describe_collection(_api, collection_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_collection_queryables_EODataDiscoveryApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => JsonSchema,
    Regex("^" * replace("4XX", "x"=>".") * "\$") => Error,
    Regex("^" * replace("5XX", "x"=>".") * "\$") => Error,
)

function _oacinternal_list_collection_queryables(_api::EODataDiscoveryApi, collection_id::String; _mediaType=nothing)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_collection_queryables_EODataDiscoveryApi, "/collections/{collection_id}/queryables", ["Bearer", ])
    OpenAPI.Clients.set_param(_ctx.path, "collection_id", collection_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/schema+json", "application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Metadata filters for a specific dataset

Lists **all** supported metadata filters (also called \"queryables\") for a specific collection.  This endpoint is compatible with endpoint defined in the STAC API extension [`filter`](https://github.com/stac-api-extensions/filter#queryables) and [OGC API - Features - Part 3: Filtering](https://github.com/opengeospatial/ogcapi-features/tree/master/extensions/filtering). For a precise definition please follow those specifications.  This endpoints provides a JSON Schema for each queryable that openEO users can use in multiple scenarios: 1. For loading data from the collection, e.g. in the process `load_collection`. 2. For filtering items using CQL2 on the `/collections/{collection_id}/items` endpoint    (if [STAC API - Features is implemented in addition to the openEO API](#tag/EO-Data-Discovery/STAC)).  Note: Providing the Bearer token is REQUIRED for private collections.

Params:
- collection_id::String (required)

Return: JsonSchema, OpenAPI.Clients.ApiResponse
"""
function list_collection_queryables(_api::EODataDiscoveryApi, collection_id::String; _mediaType=nothing)
    _ctx = _oacinternal_list_collection_queryables(_api, collection_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_collection_queryables(_api::EODataDiscoveryApi, response_stream::Channel, collection_id::String; _mediaType=nothing)
    _ctx = _oacinternal_list_collection_queryables(_api, collection_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_collections_EODataDiscoveryApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Collections,
    Regex("^" * replace("4XX", "x"=>".") * "\$") => Error,
    Regex("^" * replace("5XX", "x"=>".") * "\$") => Error,
)

function _oacinternal_list_collections(_api::EODataDiscoveryApi; limit=nothing, _mediaType=nothing)
    OpenAPI.validate_param("limit", "list_collections", :minimum, limit, 1, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_collections_EODataDiscoveryApi, "/collections", ["Bearer", ])
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit)  # type Int64
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Basic metadata for all datasets

Lists available collections with at least the required information.  It is **strongly RECOMMENDED** to keep the response size small by omitting larger optional values from the objects in `collections` (e.g. the `summaries` and `cube:dimensions` properties). To get the full metadata for a collection clients MUST request `GET /collections/{collection_id}`.  This endpoint is compatible with [STAC API 0.9.0 and later](https://stacspec.org) and [OGC API - Features 1.0](http://docs.opengeospatial.org/is/17-069r3/17-069r3.html). [STAC API extensions](https://stac-api-extensions.github.io) and [STAC extensions](https://stac-extensions.github.io) can be implemented in addition to what is documented here.  Note: Although it is possible to request public collections without authorization, it is RECOMMENDED that clients (re-)request the collections with the Bearer token once available to also retrieve any private collections.

Params:
- limit::Int64

Return: Collections, OpenAPI.Clients.ApiResponse
"""
function list_collections(_api::EODataDiscoveryApi; limit=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_collections(_api; limit=limit, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_collections(_api::EODataDiscoveryApi, response_stream::Channel; limit=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_collections(_api; limit=limit, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export describe_collection
export list_collection_queryables
export list_collections
